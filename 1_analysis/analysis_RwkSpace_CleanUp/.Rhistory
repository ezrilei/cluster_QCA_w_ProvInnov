plot_PIMS_patch(region)
}
}
regions_to_plot <- c(
"北京", "天津", "河北", "山西", "内蒙古", "辽宁", "吉林", "黑龙江",
"上海", "江苏", "浙江", "安徽", "福建", "江西", "山东", "河南",
"湖北", "湖南", "广东", "广西", "海南",
"重庆", "四川", "贵州", "云南", "西藏",
"陕西", "甘肃", "青海", "宁夏", "新疆"
)
plot_PIMS_patch_batch(regions_to_plot)
plot_PIMS_patch <- function(Region_Target) {
# 加载包
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
# devtools::install_github("ricardo-bion/ggradar")
library(ggradar)
library(scales)
library(showtext)
library(patchwork)
# 设定地区名称（你只需要改这行）
region_target <- Region_Target
# 筛选该地区的所有案例（如 湖北_2016、湖北_2017）
df_pims_region <- df_PIMS %>%
filter(stringr::str_detect(CASE, region_target)) %>%
mutate(YEAR = as.integer(stringr::str_extract(CASE, "\\d{4}")))  # 提取年份
# 数据转换为长格式（路径做变量，方便 ggplot）
df_pims_region_long <- df_pims_region %>%
pivot_longer(cols = -c(CASE, YEAR),
names_to = "CONFIG",
values_to = "PIMS")
df_pims_region_long <- df_pims_region_long %>%
mutate(
PATHWAY = case_when(
CONFIG == "X1*X3*X4*X5*X7*X8*X9→Y" ~ "路径1a",
CONFIG == "X1*X4*X5*X6*X7*X8*X9→Y" ~ "路径1b",
CONFIG == "X1*X2*X3*X4*X5*~X6*X7*X8→Y" ~ "路径2",
CONFIG == "~X1*~X3*~X4*~X5*~X7*~X8*~X9→~Y" ~ "路径3"
)
)
# 绘图 ----
# show CN text
# library(showtext) #https://github.com/yixuan/showtext
showtext_auto(enable = TRUE)
font_add("SongTi", regular = "./fonts/ STSongti-Regular-SC.ttf")# <<<<<<<<<<<<<<
# text repel data
label_data <- df_pims_region_long %>%
group_by(PATHWAY) %>%
filter(YEAR == max(YEAR)) %>%
ungroup()
## plot line -----
# 绘图：路径随时间变化图（每条路径一条线） ----
p_case_pims <-
ggplot(df_pims_region_long, aes(x = YEAR, y = PIMS, color = PATHWAY)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.5,
linetype = "dashed",
color = "gray50") +
scale_y_continuous(limits = c(0, 1)) +
scale_x_continuous(breaks = sort(unique(df_pims_region_long$YEAR))) +
labs(
title = paste0("路径隶属度演化", "（", region_target, "）"),
#subtitle = "每条线代表一个路径组态的 fuzzy membership 值",
x = "年份",
y = "模糊集隶属度得分",
color = "因果路径"
) +
theme_bw(base_family = "SongTi") +
theme(
text = element_text(family = "SongTi"),
plot.title = element_text(family = "SongTi", size = 18),
axis.title = element_text(family = "SongTi", size = 14),
legend.title = element_text(family = "SongTi", size = 12),
# 图例标题
legend.text = element_text(family = "SongTi", size = 10),
# 图例标签
legend.position = "bottom",
plot.margin = unit(c(1, 4, 1, 1), "cm")
) +
# guides(
#   color = guide_legend(ncol = 1)
#   #linetype = guide_legend(ncol = 1)
#   #linetype = guide_legend(override.aes = list(color = "black"))
# )
# 添加标签：在最后一年（如 2023）右侧略微偏移
geom_text_repel(
family = "SongTi",
data = label_data,
aes(label = PATHWAY),
nudge_x = 0.5,
# 向右偏移
direction = "both",
# 允许上下左右避让
hjust = 0,
# 左对齐
segment.color = NA,
# 不显示连接线
size = 3.0,
box.padding = 0.3,
point.padding = 0.05,
force = 4,
# 排斥强度（更强避让）
force_pull = 0.2,
# 吸引力增强，靠近线尾
max.overlaps = Inf,
show.legend = FALSE        # 不用其出现在图例，
# 如果不告诉其如何显示图例，会在图例处每一个config前 加默认图例项 "a"
)
## plot radar -----
df_radar <- df_pims_region_long %>%
group_by(PATHWAY, YEAR) %>%
summarise(PIMS = mean(PIMS, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = YEAR, values_from = PIMS)
df_radar[is.na(df_radar)] <- 0  # 可选处理缺失值
# 绘图
p_case_pims_radar <- ggradar(
df_radar,
font.radar = "SongTi",
# The labels of the grid
values.radar = c("0", "0.5", "1"),
grid.min = 0,
grid.mid = 0.5,
grid.max = 1,
group.line.width = 0.5,
group.point.size = 2,
axis.label.size = 5,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = c("#f8766d", "#7cae00", "#00bfc4", "#c77cff"),
legend.position = "bottom",
legend.text.size = 10,
fill = TRUE,
fill.alpha = 0.075,
plot.title = paste0("路径隶属度演化（", region_target, "）")
) +
#theme_bw(base_family = "TimesNewRoman") +
theme(
text = element_text(family = "SongTi"),
axis.title = element_text(family = "SongTi", size = 14),
legend.title = element_text(family = "SongTi", size = 12),
# 图例标题
legend.text = element_text(family = "SongTi", size = 10),
# 图例标签
legend.position = "none", # 不显示 legend
plot.title = element_blank() # 不显示 plot title
)
# patch -----
# library(patchwork)
# 移除 plot.margin
p1 <- p_case_pims + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
p2 <- p_case_pims_radar + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
# 输出到 PDF 文件
pdf(file = paste0("./output/【Analysis_wk】3.充分性分析_路径模糊集隶属度_patch（",
region_target,
"）.pdf"),
width = 14.5,
height = 7)
print(
p1 | p2 +
plot_layout(ncol = 2,
guides = "keep") &
theme(legend.position = "bottom")
)
dev.off()
}
plot_PIMS_patch(Region_Target = "安徽")
plot_PIMS_patch <- function(Region_Target) {
# 加载包
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
# devtools::install_github("ricardo-bion/ggradar")
library(ggradar)
library(scales)
library(showtext)
library(patchwork)
# 设定地区名称（你只需要改这行）
region_target <- Region_Target
# 筛选该地区的所有案例（如 湖北_2016、湖北_2017）
df_pims_region <- df_PIMS %>%
filter(stringr::str_detect(CASE, region_target)) %>%
mutate(YEAR = as.integer(stringr::str_extract(CASE, "\\d{4}")))  # 提取年份
# 数据转换为长格式（路径做变量，方便 ggplot）
df_pims_region_long <- df_pims_region %>%
pivot_longer(cols = -c(CASE, YEAR),
names_to = "CONFIG",
values_to = "PIMS")
df_pims_region_long <- df_pims_region_long %>%
mutate(
PATHWAY = case_when(
CONFIG == "X1*X3*X4*X5*X7*X8*X9→Y" ~ "路径1a",
CONFIG == "X1*X4*X5*X6*X7*X8*X9→Y" ~ "路径1b",
CONFIG == "X1*X2*X3*X4*X5*~X6*X7*X8→Y" ~ "路径2",
CONFIG == "~X1*~X3*~X4*~X5*~X7*~X8*~X9→~Y" ~ "路径3"
)
)
# 绘图 ----
# show CN text
# library(showtext) #https://github.com/yixuan/showtext
showtext_auto(enable = TRUE)
font_add("SongTi", regular = "./fonts/ STSongti-Regular-SC.ttf")# <<<<<<<<<<<<<<
# text repel data
label_data <- df_pims_region_long %>%
group_by(PATHWAY) %>%
filter(YEAR == max(YEAR)) %>%
ungroup()
## plot line -----
# 绘图：路径随时间变化图（每条路径一条线） ----
p_case_pims <-
ggplot(df_pims_region_long, aes(x = YEAR, y = PIMS, color = PATHWAY)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.5,
linetype = "dashed",
color = "gray50") +
scale_y_continuous(limits = c(0, 1)) +
scale_x_continuous(breaks = sort(unique(df_pims_region_long$YEAR))) +
labs(
title = paste0("路径隶属度演化", "（", region_target, "）"),
#subtitle = "每条线代表一个路径组态的 fuzzy membership 值",
x = "年份",
y = "模糊集隶属度得分",
color = "因果路径"
) +
theme_bw(base_family = "SongTi") +
theme(
text = element_text(family = "SongTi"),
plot.title = element_text(family = "SongTi", size = 18),
axis.title = element_text(family = "SongTi", size = 14),
legend.title = element_text(family = "SongTi", size = 12),
# 图例标题
legend.text = element_text(family = "SongTi", size = 10),
# 图例标签
legend.position = "bottom",
plot.margin = unit(c(1, 4, 1, 1), "cm")
) +
# guides(
#   color = guide_legend(ncol = 1)
#   #linetype = guide_legend(ncol = 1)
#   #linetype = guide_legend(override.aes = list(color = "black"))
# )
# 添加标签：在最后一年（如 2023）右侧略微偏移
geom_text_repel(
family = "SongTi",
data = label_data,
aes(label = PATHWAY),
nudge_x = 0.5,
# 向右偏移
direction = "both",
# 允许上下左右避让
hjust = 0,
# 左对齐
segment.color = NA,
# 不显示连接线
size = 3.0,
box.padding = 0.3,
point.padding = 0.05,
force = 4,
# 排斥强度（更强避让）
force_pull = 0.2,
# 吸引力增强，靠近线尾
max.overlaps = Inf,
show.legend = FALSE        # 不用其出现在图例，
# 如果不告诉其如何显示图例，会在图例处每一个config前 加默认图例项 "a"
)
## plot radar -----
df_radar <- df_pims_region_long %>%
group_by(PATHWAY, YEAR) %>%
summarise(PIMS = mean(PIMS, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = YEAR, values_from = PIMS)
df_radar[is.na(df_radar)] <- 0  # 可选处理缺失值
# 绘图
p_case_pims_radar <- ggradar(
df_radar,
font.radar = "SongTi",
# The labels of the grid
values.radar = c("0", "0.5", "1"),
grid.min = 0,
grid.mid = 0.5,
grid.max = 1,
group.line.width = 0.5,
group.point.size = 2,
axis.label.size = 5,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = c("#f8766d", "#7cae00", "#00bfc4", "#c77cff"),
legend.position = "bottom",
legend.text.size = 10,
fill = TRUE,
fill.alpha = 0.075,
plot.title = paste0("路径隶属度演化（", region_target, "）")
) +
#theme_bw(base_family = "TimesNewRoman") +
theme(
text = element_text(family = "SongTi"),
axis.title = element_text(family = "SongTi", size = 14),
legend.title = element_text(family = "SongTi", size = 12),
# 图例标题
legend.text = element_text(family = "SongTi", size = 10),
# 图例标签
legend.position = "none", # 不显示 legend
plot.title = element_blank() # 不显示 plot title
)
# patch -----
# library(patchwork)
# 移除 plot.margin
p1 <- p_case_pims + theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
p2 <- p_case_pims_radar + theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
# 输出到 PDF 文件
pdf(file = paste0("./output/【Analysis_wk】3.充分性分析_路径模糊集隶属度_patch（",
region_target,
"）.pdf"),
width = 14.5,
height = 7)
print(
(p1 | p2) +
plot_layout(ncol = 2,
widths = c(1, 1),
guides = "keep") &
theme(legend.position = "bottom")
)
dev.off()
}
plot_PIMS_patch(Region_Target = "安徽")
plot_PIMS_patch <- function(Region_Target) {
# 加载包
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
# devtools::install_github("ricardo-bion/ggradar")
library(ggradar)
library(scales)
library(showtext)
library(patchwork)
# 设定地区名称（你只需要改这行）
region_target <- Region_Target
# 筛选该地区的所有案例（如 湖北_2016、湖北_2017）
df_pims_region <- df_PIMS %>%
filter(stringr::str_detect(CASE, region_target)) %>%
mutate(YEAR = as.integer(stringr::str_extract(CASE, "\\d{4}")))  # 提取年份
# 数据转换为长格式（路径做变量，方便 ggplot）
df_pims_region_long <- df_pims_region %>%
pivot_longer(cols = -c(CASE, YEAR),
names_to = "CONFIG",
values_to = "PIMS")
df_pims_region_long <- df_pims_region_long %>%
mutate(
PATHWAY = case_when(
CONFIG == "X1*X3*X4*X5*X7*X8*X9→Y" ~ "路径1a",
CONFIG == "X1*X4*X5*X6*X7*X8*X9→Y" ~ "路径1b",
CONFIG == "X1*X2*X3*X4*X5*~X6*X7*X8→Y" ~ "路径2",
CONFIG == "~X1*~X3*~X4*~X5*~X7*~X8*~X9→~Y" ~ "路径3"
)
)
# 绘图 ----
# show CN text
# library(showtext) #https://github.com/yixuan/showtext
showtext_auto(enable = TRUE)
font_add("SongTi", regular = "./fonts/ STSongti-Regular-SC.ttf")# <<<<<<<<<<<<<<
# text repel data
label_data <- df_pims_region_long %>%
group_by(PATHWAY) %>%
filter(YEAR == max(YEAR)) %>%
ungroup()
## plot line -----
# 绘图：路径随时间变化图（每条路径一条线） ----
p_case_pims <-
ggplot(df_pims_region_long, aes(x = YEAR, y = PIMS, color = PATHWAY)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.5,
linetype = "dashed",
color = "gray50") +
scale_y_continuous(limits = c(0, 1)) +
scale_x_continuous(breaks = sort(unique(df_pims_region_long$YEAR))) +
labs(
title = paste0("路径隶属度演化", "（", region_target, "）"),
#subtitle = "每条线代表一个路径组态的 fuzzy membership 值",
x = "年份",
y = "模糊集隶属度得分",
color = "因果路径"
) +
theme_bw(base_family = "SongTi") +
theme(
text = element_text(family = "SongTi"),
plot.title = element_text(family = "SongTi", size = 18),
axis.title = element_text(family = "SongTi", size = 14),
legend.title = element_text(family = "SongTi", size = 12),
# 图例标题
legend.text = element_text(family = "SongTi", size = 10),
# 图例标签
legend.position = "bottom",
plot.margin = unit(c(1, 4, 1, 1), "cm")
) +
# guides(
#   color = guide_legend(ncol = 1)
#   #linetype = guide_legend(ncol = 1)
#   #linetype = guide_legend(override.aes = list(color = "black"))
# )
# 添加标签：在最后一年（如 2023）右侧略微偏移
geom_text_repel(
family = "SongTi",
data = label_data,
aes(label = PATHWAY),
nudge_x = 0.5,
# 向右偏移
direction = "both",
# 允许上下左右避让
hjust = 0,
# 左对齐
segment.color = NA,
# 不显示连接线
size = 3.0,
box.padding = 0.3,
point.padding = 0.05,
force = 4,
# 排斥强度（更强避让）
force_pull = 0.2,
# 吸引力增强，靠近线尾
max.overlaps = Inf,
show.legend = FALSE        # 不用其出现在图例，
# 如果不告诉其如何显示图例，会在图例处每一个config前 加默认图例项 "a"
)
## plot radar -----
df_radar <- df_pims_region_long %>%
group_by(PATHWAY, YEAR) %>%
summarise(PIMS = mean(PIMS, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = YEAR, values_from = PIMS)
df_radar[is.na(df_radar)] <- 0  # 可选处理缺失值
# 绘图
p_case_pims_radar <- ggradar(
df_radar,
font.radar = "SongTi",
# The labels of the grid
values.radar = c("0", "0.5", "1"),
grid.min = 0,
grid.mid = 0.5,
grid.max = 1,
group.line.width = 0.5,
group.point.size = 2,
axis.label.size = 5,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = c("#f8766d", "#7cae00", "#00bfc4", "#c77cff"),
legend.position = "bottom",
legend.text.size = 10,
fill = TRUE,
fill.alpha = 0.075,
plot.title = paste0("路径隶属度演化（", region_target, "）")
) +
#theme_bw(base_family = "TimesNewRoman") +
theme(
text = element_text(family = "SongTi"),
axis.title = element_text(family = "SongTi", size = 14),
legend.title = element_text(family = "SongTi", size = 12),
# 图例标题
legend.text = element_text(family = "SongTi", size = 10),
# 图例标签
legend.position = "none", # 不显示 legend
plot.title = element_blank() # 不显示 plot title
)
# patch -----
# library(patchwork)
# 移除 plot.margin
p1 <- p_case_pims + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
p2 <- p_case_pims_radar + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
# 输出到 PDF 文件
pdf(file = paste0("./output/【Analysis_wk】3.充分性分析_路径模糊集隶属度_patch（",
region_target,
"）.pdf"),
width = 14.5,
height = 7)
print(
(p1 | p2) +
plot_layout(ncol = 2,
widths = c(1, 1),
guides = "keep") &
theme(legend.position = "bottom")
)
dev.off()
}
plot_PIMS_patch(Region_Target = "安徽")
# plot_PIMS_patch(Region_Target = "安徽")
# plot_PIMS_patch(Region_Target = "江苏")
plot_PIMS_patch_batch <- function(region_vector) {
for (region in region_vector) {
print(paste0("plotting：", region))
plot_PIMS_patch(region)
}
}
regions_to_plot <- c(
"北京", "天津", "河北", "山西", "内蒙古", "辽宁", "吉林", "黑龙江",
"上海", "江苏", "浙江", "安徽", "福建", "江西", "山东", "河南",
"湖北", "湖南", "广东", "广西", "海南",
"重庆", "四川", "贵州", "云南", "西藏",
"陕西", "甘肃", "青海", "宁夏", "新疆"
)
plot_PIMS_patch_batch(regions_to_plot)
