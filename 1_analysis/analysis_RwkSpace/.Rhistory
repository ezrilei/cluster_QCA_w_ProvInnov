# pdf(file = "./output_manual/组间一致性水平趋势图.pdf", width = 10, height = 8)
pdf(file = "./output/【Analysis_wk】3.充分性分析_组间覆盖度变化趋势图.pdf", width = 10, height = 8)
p_config_BECOV <- ggplot(df_cluster_data_allY_BECONS_BECOV,
aes(x = YEAR, y = BECOV, group = CONFIG, color = CONFIG)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 0.50, linetype = "dashed", color = "black", alpha = 0.4) +
scale_x_discrete() +
scale_y_continuous(
breaks = seq(0.1, 0.8, by = 0.1),
limits = c(0.1, 0.8)
)+
labs(
x = "年份",
y = "组间覆盖度",
color = "因果路径"
) +
theme_bw(base_family = "TimesNewRoman") +
theme(
axis.title = element_text(family = "fangSong", size = 14),
legend.title = element_text(family = "fangSong", size = 13),
plot.margin = unit(c(1, 4, 1, 1), "cm"),
legend.position = "bottom"
) +
guides(color = guide_legend(ncol = 1))  + # <<<<<<<< 每列 1 项，竖排
# 添加标签：在最后一年（如 2023）右侧略微偏移
geom_text_repel(
family = "TimesNewRoman",
data = label_data,
aes(label = CONFIG),
nudge_x = 2.6,             # 向右偏移
direction = "both",        # 允许上下左右避让
hjust = 0,                 # 左对齐
segment.color = NA,        # 不显示连接线
size = 3.0,
box.padding = 0.3,
point.padding = 0.05,
force = 4,                # 排斥强度（更强避让）
force_pull = 0.2,         # 吸引力增强，靠近线尾
max.overlaps = Inf,
show.legend = FALSE        # 不用其出现在图例，
# 如果不告诉其如何显示图例，会在图例处每一个config前 加默认图例项 "a"
)
print(p_config_BECOV)
dev.off()
p_config_BECOV
library(showtext)
# 设置中文字体支持
showtext_auto(enable = TRUE)
font_add("fangSong", regular = "./fonts/方正仿宋_GBK.TTF")
font_add("TimesNewRoman", regular = "./fonts/Times New Roman.ttf")
library(patchwork)
# 输出到 PDF 文件
pdf(file = "./output/【Analysis_wk】组间一致性与覆盖度_趋势图_patch.pdf", width = 10, height = 12)
p_config_BECONS / p_config_BECOV +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
dev.off()
# 加载必要包
library(tidyverse)
library(ggrepel)
library(showtext)
# 设置中文字体支持
showtext_auto(enable = TRUE)
font_add("fangSong", regular = "./fonts/方正仿宋_GBK.TTF")
font_add("TimesNewRoman", regular = "./fonts/Times New Roman.ttf")
# 假设 df_cluster_data_allY_BECONS_BECOV 已存在，包含：
# YEAR: 年份
# CONFIG: 因果路径
# BECONS: 组间一致性
# BECOV: 组间覆盖度
# 1. 转换为长格式以绘制多个指标
df_long <- df_cluster_data_allY_BECONS_BECOV %>%
pivot_longer(cols = c(BECONS, BECOV),
names_to = "Metric",
values_to = "Value") %>%
mutate(
Metric = recode(Metric,
"BECONS" = "组间一致性",
"BECOV" = "组间覆盖度")
)
View(df_cluster_data_allY_BECONS_BECOV)
recode(Metric,
"BECONS" = "组间一致性",
"BECOV" = "组间覆盖度")
df_cluster_data_allY_BECONS_BECOV %>%
pivot_longer(cols = c(BECONS, BECOV),
names_to = "Metric",
values_to = "Value") %>%
mutate(
Metric = recode(Metric,
BECONS = "组间一致性",
BECOV = "组间覆盖度")
)
df_cluster_data_allY_BECONS_BECOV %>%
pivot_longer(cols = c(BECONS, BECOV),
names_to = "Metric",
values_to = "Value")
df_long <- df_cluster_data_allY_BECONS_BECOV %>%
pivot_longer(cols = c(BECONS, BECOV),
names_to = "Metric",
values_to = "Value")
View(df_long)
df_long <- df_cluster_data_allY_BECONS_BECOV %>%
pivot_longer(cols = c(BECONS, BECOV),
names_to = "Metric",
values_to = "Value") %>%
mutate(Metric = dplyr::recode(Metric,
BECONS = "组间一致性",
BECOV = "组间覆盖度"
)
)
View(df_long)
View(df_long)
# 2. 提取每个路径在每个指标最后一年用于标注
label_data <- df_long %>%
group_by(CONFIG, Metric) %>%
filter(YEAR == max(YEAR)) %>%
ungroup()
# 3. 输出到 PDF 文件
pdf(file = "./output/【Analysis_wk】组间一致性与覆盖度_趋势图_含图注与标签.pdf", width = 10, height = 10)
# 4. 绘图
p_config_BECONS_BECOV <- ggplot(df_long, aes(x = YEAR, y = Value,
group = interaction(CONFIG, Metric))) +
geom_line(aes(color = CONFIG, linetype = Metric), size = 0.5) +
geom_point(aes(color = CONFIG), size = 1) +
# 添加参考线
geom_hline(yintercept = 0.90, linetype = "dashed", color = "black") +
geom_hline(yintercept = 0.50, linetype = "dashed", color = "black") +
# 添加尾部路径标签（两类指标）
geom_text_repel(
data = label_data,
aes(label = CONFIG, y = Value, color = CONFIG),
family = "TimesNewRoman",
nudge_x = 2.8,
direction = "y",
hjust = 0,
segment.color = NA,
size = 3.0,
box.padding = 0.3,
point.padding = 0.05,
max.overlaps = Inf,
show.legend = FALSE
) +
# 设置图例与轴标签
labs(
x = "年份",
y = "指标值",
color = "因果路径",
linetype = "指标类型"
) +
scale_x_discrete() +
# y轴网格线
scale_y_continuous(
breaks = seq(0, 1, by = 0.1),     # 每 0.1 一个刻度
limits = c(0, 1)#,                 # Y轴区间从 0 到 1
#expand = c(0, 0)                  # 不额外留白（可选）
)+
theme_bw(base_family = "TimesNewRoman") +
theme(
text = element_text(family = "fangSong"),
axis.title = element_text(family = "fangSong", size = 14),
legend.title = element_text(family = "fangSong", size = 12),  # 图例标题
legend.text = element_text(family = "fangSong", size = 10),   # 图例标签
legend.position = "bottom",
plot.margin = unit(c(1, 4, 1, 1), "cm")
) +
guides(
color = guide_legend(ncol = 1),
linetype = guide_legend(ncol = 1)
#linetype = guide_legend(override.aes = list(color = "black"))
)
# 打印图表
print(p_config_BECONS_BECOV)
dev.off()
# 可在 RStudio 中显示
p_config_BECONS_BECOV
# take a look at what to extract
cluster_data_Y
cluster_data_Y$output %>% names()
cluster_data_Y$output$`X1*X3*X4*X5*X6*X7*X9`$WICONS
cluster_data_Y$output$`X1*X3*X4*X5*X6*X7*X9`$unit_ids
gsub(pattern = "\\(.*\\)",
replacement = "",
x = cluster_data_Y$output$`X1*X3*X4*X5*X6*X7*X9`$unit_ids
) %>%
gsub(pattern = "\\s",
replacement = "")
extract_config_WICONS_by_year <- function(cluster_result) {
# Get all configurations in the result
config_list <- cluster_result$output
result_list <- list()
for (config_name in names(config_list)) {
config_output <- config_list[[config_name]]
# Extract year from cluster_ids, e.g., "湖北 (8) "  → "2016"
provs <- gsub(pattern = "\\(.*\\)\\s+",
replacement = "",
x = config_output$unit_ids
) %>%
# 删去 空格
gsub(pattern = "\\s",
replacement = ""
)
# Extract WICON values (same length as provs)
wicos <- config_output$WICONS
# Build a data frame
df <- data.frame(
PROVS = provs,
CONFIG = config_name,
WICONS = wicos,
stringsAsFactors = FALSE
)
result_list[[config_name]] <- df
}
# Combine all configurations
final_df <- do.call(rbind, result_list)
rownames(final_df) <- NULL
return(final_df)
}
# Y
df_cluster_data_Y_WICONS <- extract_config_WICONS_by_year(cluster_data_Y) %>%
mutate(CONFIG = paste0(CONFIG," → Y"))
# print(df_cluster_data_Y_BECONS)
# ~Y
df_cluster_data_negY_WICONS <- extract_config_WICONS_by_year(cluster_data_negY) %>%
mutate(CONFIG = paste0(CONFIG," → ~Y"))
# print(df_cluster_data_negY_BECONS)
# Y and ~Y
df_cluster_data_allY_WICONS <- rbind(df_cluster_data_Y_WICONS,
df_cluster_data_negY_WICONS
)
#print(df_cluster_data_allY_WICONS)
# 设定省份的固定顺序
prov_order <- c(
"北京", "天津", "河北", "山西", "内蒙古", "辽宁", "吉林", "黑龙江",
"上海", "江苏", "浙江", "安徽", "福建", "江西", "山东", "河南",
"湖北", "湖南", "广东", "广西", "海南",
"重庆", "四川", "贵州", "云南", "西藏",
"陕西", "甘肃", "青海", "宁夏", "新疆"
)
# 把 PROVS 列转换factor
df_cluster_data_allY_WICONS$PROVS <- factor(df_cluster_data_allY_WICONS$PROVS,
levels = prov_order
)
# 按照固定省份顺序排序
df_cluster_data_allY_WICONS <- df_cluster_data_allY_WICONS %>%
arrange(CONFIG, PROVS)
print(df_cluster_data_allY_WICONS)
library(ggplot2)
# show CN text
library(showtext) #https://github.com/yixuan/showtext
showtext_auto(enable = TRUE)
font_add("fangSong", regular = "./fonts/方正仿宋_GBK.TTF") # <<<<<<<<<<<<<<
font_add("TimesNewRoman", regular = "./fonts/Times New Roman.ttf")
# store to pdf (create a pdf device) ---------------
# pdf(file = "./output_manual/组间一致性水平趋势图.pdf", width = 10, height = 8)
pdf(file = "./output/【Analysis_wk】3.充分性分析_组内一致性热力图.pdf", width = 16, height = 2.8)
p_config_WICONS <- ggplot(df_cluster_data_allY_WICONS, aes(x = PROVS, y = CONFIG, fill = WICONS)) +
geom_tile(color = "white") +
geom_text(aes(label = sprintf("%.2f", WICONS)),  # WICONS 保留2位
size = 3,
family = "TimesNewRoman") +  # <<< 用TimesNewRoman显示数值
scale_fill_gradient2(
#low = "#4575b4", mid = "#fcfdc4", high = "#d9352a", midpoint = 0.75,
low = "#d9352a", mid = "#fcfdc4", high = "#4575b4", midpoint = 0.75,
name = "组内一致性（WICONS）"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
text = element_text(family = "fangSong")  # 设置全局字体为仿宋
) +
labs(x = "省份", y = "因果路径（CONFIG）", title = "各因果路径在不同省份的组内一致性热图")
print(p_config_WICONS)
dev.off()
p_config_WICONS
# pims - prime implicant membership scores
df_PIMS_Y <- intsol_Y_esa$pims %>%
rename_with(~ paste0(.x, "→Y")) %>%
tibble::rownames_to_column(var = "CASE")
df_PIMS_negY <- intsol_negY_esa$pims %>%
rename_with(~ paste0(.x, "→~Y")) %>%
tibble::rownames_to_column(var = "CASE")
df_PIMS <- dplyr::full_join(x = df_PIMS_Y,
y = df_PIMS_negY,
by = "CASE"
)
# 看一眼
df_PIMS
plot_PIMS <- function(Region_Target){
# 加载包
library(dplyr)
library(tidyr)
library(ggplot2)
# library(stringr)
# 设定地区名称（你只需要改这行）
region_target <- Region_Target
# 筛选该地区的所有案例（如 湖北_2016、湖北_2017）
df_pims_region <- df_PIMS %>%
filter(stringr::str_detect(CASE, region_target)) %>%
mutate(Year = as.integer(stringr::str_extract(CASE, "\\d{4}")))  # 提取年份
# 数据转换为长格式（路径做变量，方便 ggplot）
df_pims_region_long <- df_pims_region %>%
pivot_longer(
cols = -c(CASE, Year),
names_to = "Pathway",
values_to = "Membership"
)
# 绘图 ----
# show CN text
library(showtext) #https://github.com/yixuan/showtext
showtext_auto(enable = TRUE)
font_add("fangSong", regular = "./fonts/方正仿宋_GBK.TTF") # <<<<<<<<<<<<<<
font_add("TimesNewRoman", regular = "./fonts/Times New Roman.ttf")
# store to pdf (create a pdf device) ---------------
# pdf(file = "./output_manual/组间一致性水平趋势图.pdf", width = 10, height = 8)
pdf(file = paste0("./output/【Analysis_wk】3.充分性分析_路径模糊集隶属度（",
region_target,
"）.pdf"), width = 10, height = 8)
# 绘图：路径随时间变化图（每条路径一条线）----
p_case_pims <- ggplot(df_pims_region_long, aes(x = Year, y = Membership, color = Pathway)) +
geom_line(size = 0.5) +
geom_point(size = 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "gray50") +
scale_y_continuous(limits = c(0, 1)) +
scale_x_continuous(breaks = sort(unique(df_pims_region_long$Year))) +
labs(
title = paste0("路径隶属度演化", "（", region_target, "）"),
#subtitle = "每条线代表一个路径组态的 fuzzy membership 值",
x = "年份",
y = "模糊集隶属度得分",
color = "因果路径"
) +
theme_bw(base_family = "TimesNewRoman") +
theme(
text = element_text(family = "fangSong"),
axis.title = element_text(family = "fangSong", size = 14),
legend.title = element_text(family = "fangSong", size = 12),  # 图例标题
legend.text = element_text(family = "fangSong", size = 10),   # 图例标签
legend.position = "bottom",
plot.margin = unit(c(1, 4, 1, 1), "cm")
) +
guides(
color = guide_legend(ncol = 1)
#linetype = guide_legend(ncol = 1)
#linetype = guide_legend(override.aes = list(color = "black"))
)
print(p_case_pims)
dev.off()
p_case_pims
}
plot_PIMS_batch <- function(region_vector) {
for (region in region_vector) {
message("plotting：", region)
plot_PIMS(region)
}
}
# plot_PIMS(Region_Target = "安徽")
# plot_PIMS(Region_Target = "江苏")
# plot_PIMS(Region_Target = "江苏")
# plot_PIMS(Region_Target = "江苏")
# plot_PIMS(Region_Target = "江苏")
regions_to_plot <- c(
"北京", "天津", "河北", "山西", "内蒙古", "辽宁", "吉林", "黑龙江",
"上海", "江苏", "浙江", "安徽", "福建", "江西", "山东", "河南",
"湖北", "湖南", "广东", "广西", "海南",
"重庆", "四川", "贵州", "云南", "西藏",
"陕西", "甘肃", "青海", "宁夏", "新疆"
)
plot_PIMS_batch(regions_to_plot)
# 加载必要包
library(dplyr)
library(tidyr)
library(stringr)
library(fmsb)
region_target <- "湖北"
# show CN text
library(showtext) #https://github.com/yixuan/showtext
showtext_auto(enable = TRUE)
font_add("fangSong", regular = "./fonts/方正仿宋_GBK.TTF") # <<<<<<<<<<<<<<
font_add("TimesNewRoman", regular = "./fonts/Times New Roman.ttf")
# store to pdf (create a pdf device) ---------------
pdf(file = paste0("./output/【Analysis_wk】3.充分性分析_路径模糊集隶属度（",
region_target,
"）_雷达图.pdf"), width = 10, height = 8)
# 1. 筛选该地区的数据
df_region <- df_PIMS %>%
filter(str_detect(CASE, region_target)) %>%
mutate(Year = str_extract(CASE, "\\d{4}")) %>%
arrange(Year)
# 2. 重整数据：每个路径为一行，每个年份为一列
df_radar <- df_region %>%
select(-CASE) %>%
pivot_longer(-Year, names_to = "Pathway", values_to = "Membership") %>%
pivot_wider(names_from = Year, values_from = Membership)
# 3. 添加 fmsb 所需的最大值 & 最小值行
df_radar_plot <- rbind(
rep(1, ncol(df_radar) - 1),  # 最大值
rep(0, ncol(df_radar) - 1),  # 最小值
df_radar[, -1]               # 实际数据（去掉 Pathway）
)
# 4. 设置颜色
colors_border <- rainbow(nrow(df_radar))
colors_fill <- adjustcolor(colors_border, alpha.f = 0.2)
# 5. 绘图
radarchart(df_radar_plot,
axistype = 1,
pcol = colors_border,
pfcol = colors_fill,
plwd = 2,
plty = 1,
cglcol = "grey",
cglty = 1,
axislabcol = "black",
caxislabels = seq(0, 1, 0.2),
vlcex = 0.8,
title = paste0("路径隶属度演化", "（", region_target, "）")
)
# 添加图例
legend("topright", legend = df_radar$Pathway,
col = colors_border, lty = 1, lwd = 2, bty = "n", cex = 0.8)
dev.off()
plot_PIMS_radar <- function(Region_Target) {
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
# install.packages("devtools")
# devtools::install_github("ricardo-bion/ggradar")
library(ggradar)
library(scales)
library(showtext)
# 中文支持
showtext_auto(enable = TRUE)
font_add("fangSong", regular = "./fonts/方正仿宋_GBK.TTF")
font_add("TimesNewRoman", regular = "./fonts/Times New Roman.ttf")
# 地区名
region_target <- Region_Target
# 数据准备 ------------------------------------
df_pims_region <- df_PIMS %>%
filter(str_detect(CASE, region_target)) %>%
mutate(Year = as.integer(str_extract(CASE, "\\d{4}"))) %>%
arrange(Year)
df_pims_region_long <- df_pims_region %>%
pivot_longer(
cols = -c(CASE, Year),
names_to = "Pathway",
values_to = "Membership"
)
df_radar <- df_pims_region_long %>%
group_by(Pathway, Year) %>%
summarise(Membership = mean(Membership, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Year, values_from = Membership) %>%
rename(Path = Pathway)
df_radar[is.na(df_radar)] <- 0  # 可选处理缺失值
# 绘图并保存 ------------------------------------
p_case_pims_radar <- ggradar(df_radar,
font.radar = "fangSong",
# The labels of the grid
values.radar = c("0", "0.5", "1"),
grid.min = 0, grid.mid = 0.5, grid.max = 1,
group.line.width = 0.5,
group.point.size = 2,
axis.label.size = 5,
background.circle.colour = "white",
axis.line.colour = "gray60",
gridline.min.colour = "gray60",
gridline.mid.colour = "gray60",
gridline.max.colour = "gray60",
group.colours = c("#f8766d", "#7cae00", "#00bfc4", "#c77cff"),
legend.position = "bottom",
legend.text.size = 10,
fill = TRUE,
fill.alpha = 0.075,
plot.title = paste0("路径隶属度演化（", region_target, "）"))+
#theme_bw(base_family = "TimesNewRoman") +
theme(
text = element_text(family = "fangSong"),
axis.title = element_text(family = "fangSong", size = 14),
legend.title = element_text(family = "fangSong", size = 12),
# 图例标题
legend.text = element_text(family = "fangSong", size = 10),
# 图例标签
legend.position = "bottom",
#plot.margin = unit(c(1, 4, 1, 1), "cm")
) +
guides(color = guide_legend(ncol = 1))
# 保存 PDF
ggsave(
filename = paste0("./output/【Analysis_wk】3.充分性分析_路径模糊集隶属度（",
region_target,
"）_雷达图.pdf"),
plot = p_case_pims_radar,
width = 10,
height = 10
)
return(p_case_pims_radar)
}
plot_PIMS_radar_batch <- function(region_vector) {
for (region in region_vector) {
message("plotting radar：", region)
plot_PIMS_radar(region)
}
}
# 一个地区
# plot_PIMS_radar("湖北")
plot_PIMS_radar_batch
# 一个地区
# plot_PIMS_radar("湖北")
plot_PIMS_radar_batch(regions_to_plot)
plot_PIMS_radar_batch(regions_to_plot)
