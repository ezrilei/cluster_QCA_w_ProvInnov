"0",""
"0","# p_rawVSfuzzy_Y <- ggplot(data = data.frame(Raw = df.input$Y, Calibrated = df.Fuzzy$Y), "
"0","#                          aes(x = Raw, y = Calibrated)"
"0","#                          ) +"
"0","#   geom_point(color = ""black"", size = 1) +"
"0","#   geom_hline(yintercept = 0.5, linetype = ""dashed"", color = ""red"") +"
"0","#   labs("
"0","#     title = ""XY Plot: Raw vs Calibrated Data (Y)"","
"0","#     x = ""Raw Data"","
"0","#     y = ""Calibrated Fuzzy Set"""
"0","#   ) +"
"0","#   theme_minimal() +"
"0","#   theme(plot.title = element_text(hjust = 0.5),  # 标题居中"
"0","#         plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), ""cm"")"
"0","#         )  # 调整图形的边距"
"0","#   "
"0",""
"0","# p_rawVSfuzzy_X1 <- ggplot(data = data.frame(Raw = df.input$X1, Calibrated = df.Fuzzy$X1), "
"0","#                           aes(x = Raw, y = Calibrated)"
"0","#                           ) +"
"0","#   geom_point(color = ""black"", size = 1) +"
"0","#   geom_hline(yintercept = 0.5, linetype = ""dashed"", color = ""red"") +"
"0","#   labs("
"0","#     title = ""XY Plot: Raw vs Calibrated Data (X1)"","
"0","#     x = ""Raw Data"","
"0","#     y = ""Calibrated Fuzzy Set"""
"0","#   ) +"
"0","#   theme_minimal() +"
"0","#   theme(plot.title = element_text(hjust = 0.5),  # 标题居中"
"0","#         plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), ""cm"")"
"0","#         )  # 调整图形的边距"
"0",""
"0","# def function -----"
"0","fun_plot_rawVSfuzzy <- function(var){"
"0","  ggplot(data = data.frame(Raw = df.input[[var]], Calibrated = df.Fuzzy[[var]]), "
"0","                          aes(x = Raw, y = Calibrated)"
"0","                          ) +"
"0","  geom_point(color = ""black"", size = 1) +"
"0","  geom_hline(yintercept = 0.5, linetype = ""dashed"", color = ""red"") +"
"0","  labs("
"0","    title = paste0(""XY Plot: Raw vs Calibrated"", "" ("", var, "")""),"
"0","    x = paste0(""Raw Data - "", var),"
"0","    y = paste0(""Calibrated Fuzzy Set - "", var)"
"0","  ) +"
"0","  theme_minimal() +"
"0","  theme(plot.title = element_text(hjust = 0.5),  # 标题居中"
"0","        plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), ""cm"")"
"0","        )  # 调整图形的边距"
"0","}"
"0",""
"0","# draw plot -----"
"0","p_rawVSfuzzy_Y <- fun_plot_rawVSfuzzy(var = ""Y"")"
"0","p_rawVSfuzzy_X1 <- fun_plot_rawVSfuzzy(var = ""X1"")"
"0","p_rawVSfuzzy_X2 <- fun_plot_rawVSfuzzy(var = ""X2"")"
"0","p_rawVSfuzzy_X3 <- fun_plot_rawVSfuzzy(var = ""X3"")"
"0","p_rawVSfuzzy_X4 <- fun_plot_rawVSfuzzy(var = ""X4"")"
"0","p_rawVSfuzzy_X5 <- fun_plot_rawVSfuzzy(var = ""X5"")"
"0","p_rawVSfuzzy_X6 <- fun_plot_rawVSfuzzy(var = ""X6"")"
"0","p_rawVSfuzzy_X7 <- fun_plot_rawVSfuzzy(var = ""X7"")"
"0","p_rawVSfuzzy_X8 <- fun_plot_rawVSfuzzy(var = ""X8"")"
"0","p_rawVSfuzzy_X9 <- fun_plot_rawVSfuzzy(var = ""X9"")"
"0",""
"0",""
"0",""
"0","# store to pdf (create a pdf device) "
"0",""
"0","pdf(file = ""./output/【Analysis_4】1.校准_rawVSfuzzy.pdf"", "
"0","    width = 12, height = 16"
"0",")"
"0",""
"0","# patch up -----"
"0","p_rawVSfuzzy_patch <- wrap_plots(p_rawVSfuzzy_X1,"
"0","                                 p_rawVSfuzzy_X2,"
"0","                                 p_rawVSfuzzy_X3,"
"0","                                 p_rawVSfuzzy_X4,"
"0","                                 p_rawVSfuzzy_X5,"
"0","                                 p_rawVSfuzzy_X6,"
"0","                                 p_rawVSfuzzy_X7,"
"0","                                 p_rawVSfuzzy_X8,"
"0","                                 p_rawVSfuzzy_X9,"
"0","                                 p_rawVSfuzzy_Y,"
"0","                                 ncol = 3)  # 自动调整"
"0",""
"0","# 显示拼接后的图"
"0","print(p_rawVSfuzzy_patch)"
